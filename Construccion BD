CREATE DATABASE Hospital;

USE Hospital;

CREATE TABLE IF NOT EXISTS Administrador(
codigo VARCHAR(10) NOT NULL,
clave BLOB NOT NULL,
nombre VARCHAR(50) NOT NULL,
DPI CHAR(13) NOT NULL,
CONSTRAINT PK_ID PRIMARY KEY(codigo)
);

INSERT INTO Administrador VALUES (0,0x636D397664413D3D, 'root', '123');

CREATE TABLE IF NOT EXISTS Especialidad(
codigo VARCHAR(10) NOT NULL,
nombre VARCHAR(30) NOT NULL,
costo decimal(16,4),
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo)
);

CREATE TABLE IF NOT EXISTS Medico(
codigo VARCHAR(10) NOT NULL,
nombre VARCHAR(50) NOT NULL,
colegiado VARCHAR(15) NOT NULL,
DPI CHAR(13) NOT NULL,
telefono VARCHAR(20) NOT NULL,
correo VARCHAR(50) NOT NULL,
horaEntrada TIME NOT NULL,
horaSalida TIME NOT NULL,
inicioTrabajo DATE NOT NULL,
password BLOB NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo)
);

CREATE TABLE IF NOT EXISTS EspecialidadMedico(
codigo VARCHAR(10),
especialidad VARCHAR(10) NOT NULL,
medico VARCHAR(10),
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_ESPECIALIDAD FOREIGN KEY(especialidad)
REFERENCES Especialidad(codigo),
CONSTRAINT FK_MEDICO FOREIGN KEY(medico)
REFERENCES Medico(codigo)
);

CREATE TABLE IF NOT EXISTS Paciente(
codigo VARCHAR(10) NOT NULL,
nombre VARCHAR(50) NOT NULL,
sexo VARCHAR(10) NOT NULL,
nacimiento DATE NOT NULL,
DPI CHAR(13) NOT NULL,
telefono VARCHAR(20) NOT NULL,
peso decimal(16,4) NOT NULL,
sangre CHAR(2) NOT NULL,
correo VARCHAR(50) NOT NULL,
password BLOB NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo)
);

CREATE TABLE IF NOT EXISTS Examen(
codigo VARCHAR(10) NOT NULL,
nombre VARCHAR(50) NOT NULL,
ordenMedica BOOLEAN NOT NULL,
Descripcion TEXT NOT NULL,
costo decimal(16,4) NOT NULL,
tipoInforme CHAR(3) NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo)
);

CREATE TABLE IF NOT EXISTS Laboratorista(
codigo VARCHAR(10) NOT NULL,
examen VARCHAR(10) NOT NULL,
nombre VARCHAR(50) NOT NULL,
NoRegistro VARCHAR(20) NOT NULL,
DPI CHAR(13) NOT NULL,
telefono VARCHAR(20) NOT NULL,
correo VARCHAR(50) NOT NULL,
inicioTrabajo DATE NOT NULL,
password BLOB NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_EXAMEN FOREIGN KEY(examen)
REFERENCES Examen(codigo)
);

CREATE TABLE IF NOT EXISTS DiasLaboratorista(
codigo VARCHAR(10) NOT NULL,
laboratorista VARCHAR(10) NOT NULL,
Lunes BOOLEAN,
Martes BOOLEAN,
Miercoles BOOLEAN,
Jueves BOOLEAN,
Viernes BOOLEAN,
Sabado BOOLEAN,
Domingo BOOLEAN,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_LABORATORISTA FOREIGN KEY(laboratorista)
REFERENCES Laboratorista(codigo)
);

CREATE TABLE IF NOT EXISTS CitaExamen(
codigo VARCHAR(10) NOT NULL,
paciente VARCHAR(10) NOT NULL,
examen VARCHAR(10) NOT NULL,
fecha DATE,
realizado BOOLEAN,
medico VARCHAR(10),
orden BLOB,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_PACIENTE FOREIGN KEY(paciente)
REFERENCES Paciente(codigo),
CONSTRAINT FK_EXAM FOREIGN KEY(examen)
REFERENCES Examen(codigo),
CONSTRAINT FK_MEDI FOREIGN KEY(medico)
REFERENCES Medico(codigo)
);

CREATE TABLE IF NOT EXISTS ResultadosLaboratorio(
codigo VARCHAR(10) NOT NULL,
citaExamen VARCHAR(10) NOT NULL,
laboratorista VARCHAR(10) NOT NULL,
informe TEXT NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_CITA FOREIGN KEY(citaExamen)
REFERENCES CitaExamen(codigo),
CONSTRAINT FK_LABORATORISTA_RESULTADOS FOREIGN KEY(laboratorista)
REFERENCES Laboratorista(codigo)
);

CREATE TABLE IF NOT EXISTS Consulta(
codigo VARCHAR(50) NOT NULL,
paciente VARCHAR(50) NOT NULL,
medico VARCHAR(50) NOT NULL,
especialidad VARCHAR(50) NOT NULL,
fecha DATE NOT NULL,
hora TIME NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_PACIENTE_CONSULTA FOREIGN KEY(paciente)
REFERENCES Paciente(codigo),
CONSTRAINT FK_MEDICO_CONSULTA FOREIGN KEY(medico)
REFERENCES Medico(codigo),
CONSTRAINT FK_ESP_CONSULTA FOREIGN KEY(especialidad)
REFERENCES Especialidad(codigo)
);

CREATE TABLE IF NOT EXISTS Informe(
codigo VARCHAR(10) NOT NULL,
consulta VARCHAR(10) NOT NULL,
hora TIME NOT NULL,
fecha DATE NOT NULL,
descripcion TEXT NOT NULL,
CONSTRAINT PK_CODIGO PRIMARY KEY(codigo),
CONSTRAINT FK_CONSULTA FOREIGN KEY(consulta)
REFERENCES Consulta(codigo)
);
